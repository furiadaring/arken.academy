services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: academy_api
    restart: unless-stopped
    ports:
      - '5555:5555'
      - '8000:8000'
    environment:
      - PORT=8000
      - DATABASE_URL=postgresql://arken-user:d48fc25ce0c95db0387af2f647b156bf9d40805bd674fc248a3bf50b0beac@postgres:5432/arken?schema=public
      - ENCRYPTION_KEY=706d48fc25ce0c95db0387af2f647b156bf9d40805bd674fc248a3bf50b0beac
      - JWT_SECRET=706d48fc25ce0c95db0387af2f647b156bf9d40805bd674fc248a3bf50b0beac
      - ACCESS_TOKEN_SECRET=706d48fc25ce0c95db0387af2f647b156bf9d40805bd674fc248a3bf50b0beac
      - REFRESH_TOKEN_SECRET=706d48fc25ce0c95db0387af2f647b156bf9d40805bd674fc248a3bf50b0beac
      - COOKIE_PREFIX=arken-
      - NEXT_PUBLIC_STRIPE_PUBLIC_KEY=pk_test
      - STRIPE_SECRET_KEY=sk_test_

    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    ports:
      - '127.0.0.1:5432:5432'
    environment:
      POSTGRES_USER: arken-user
      POSTGRES_PASSWORD: d48fc25ce0c95db0387af2f647b156bf9d40805bd674fc248a3bf50b0beac
      POSTGRES_DB: arken
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U arken-user -d arken']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
